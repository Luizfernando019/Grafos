package view;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Edge;
import model.Graph;
import model.Graphml;
import model.Node;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Luiz Fernando
 */
public class frmInterface extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Graph graph = new Graph();
    Graphml graphml = new Graphml();
    private String choose = null;
    List<Node> listaNode = new ArrayList<Node>();
    List<Edge> listaEdge = new ArrayList<Edge>();
    int w = 0;
    int h = 0;

    public frmInterface() {
        graph.setEdgedefault("undirected");
//        centralizarComponente();
        this.setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        iconNovo = new javax.swing.JLabel();
        iconAbrir = new javax.swing.JLabel();
        iconSalvar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnAdicionarVertice = new javax.swing.JButton();
        txtaddVertice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnAdicionarAresta = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbOrigem = new javax.swing.JComboBox<>();
        cbDestino = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btnMostrarVA = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuNovo = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        menuExibir = new javax.swing.JMenu();
        menuInfo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));

        display.setEditable(false);
        display.setBackground(new java.awt.Color(234, 234, 234));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        display.setLineWrap(true);
        display.setRows(5);
        display.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(display);

        jPanel2.setBackground(new java.awt.Color(226, 226, 226));

        iconNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/novo.png"))); // NOI18N
        iconNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconNovoMouseClicked(evt);
            }
        });

        iconAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        iconAbrir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAbrirMouseClicked(evt);
            }
        });

        iconSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/salvarComo.png"))); // NOI18N
        iconSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconSalvarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iconAbrir)
                .addGap(18, 18, 18)
                .addComponent(iconSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iconSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(iconAbrir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iconNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(229, 229, 229));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnAdicionarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAdicionarVertice.setText("Adicionar");
        btnAdicionarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdicionarVertice.setContentAreaFilled(false);
        btnAdicionarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdicionarVerticeMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdicionarVerticeMouseEntered(evt);
            }
        });
        btnAdicionarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarVerticeActionPerformed(evt);
            }
        });

        txtaddVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtaddVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Nome");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtaddVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarVertice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtaddVertice, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(btnAdicionarVertice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Vertice");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Aresta");

        jPanel6.setBackground(new java.awt.Color(229, 229, 229));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnAdicionarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAdicionarAresta.setText("Adicionar");
        btnAdicionarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdicionarAresta.setContentAreaFilled(false);
        btnAdicionarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdicionarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdicionarArestaMouseExited(evt);
            }
        });
        btnAdicionarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarArestaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Origem");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("No2");

        cbOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOrigemActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Destino");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbOrigem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(94, 94, 94))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbDestino)
                            .addComponent(btnAdicionarAresta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnMostrarVA.setBackground(new java.awt.Color(255, 255, 255));
        btnMostrarVA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnMostrarVA.setText("Mostrar V/A");
        btnMostrarVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnMostrarVA.setContentAreaFilled(false);
        btnMostrarVA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMostrarVA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMostrarVAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMostrarVAMouseExited(evt);
            }
        });
        btnMostrarVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarVAActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Display");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnMostrarVA, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarVA, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuArquivo.setText("Arquivo");

        menuNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/novo.png"))); // NOI18N
        menuNovo.setText("Novo");
        menuNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoActionPerformed(evt);
            }
        });
        menuArquivo.add(menuNovo);

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        menuArquivo.add(menuAbrir);

        menuSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/salvarComo.png"))); // NOI18N
        menuSalvar.setText("Salvar como...");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSalvar);

        menuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sair.png"))); // NOI18N
        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSair);

        jMenuBar1.add(menuArquivo);

        menuExibir.setText("Exibir");

        menuInfo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        menuInfo.setText("Todas info...");
        menuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInfoActionPerformed(evt);
            }
        });
        menuExibir.add(menuInfo);

        jMenuBar1.add(menuExibir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeActionPerformed
        display.setText("\t==========Vertice==========\n\n" + adicionarVertice(txtaddVertice.getText()));
        txtaddVertice.setText("");
    }//GEN-LAST:event_btnAdicionarVerticeActionPerformed

    private void btnAdicionarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeMouseEntered
        btnAdicionarVertice.setContentAreaFilled(true);
        btnAdicionarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnAdicionarVerticeMouseEntered

    private void btnAdicionarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeMouseExited
        btnAdicionarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAdicionarVerticeMouseExited

    private void btnAdicionarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarArestaMouseEntered
        btnAdicionarAresta.setContentAreaFilled(true);
        btnAdicionarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnAdicionarArestaMouseEntered

    private void btnAdicionarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarArestaMouseExited
        btnAdicionarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAdicionarArestaMouseExited

    private void btnAdicionarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarArestaActionPerformed
        graph.AddEdges((String) cbOrigem.getSelectedItem(), (String) cbDestino.getSelectedItem());
        ImprimeEdge();
    }//GEN-LAST:event_btnAdicionarArestaActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        abrirArquivo();
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        salvarArquivo();
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInfoActionPerformed
        imprimeInfo();
    }//GEN-LAST:event_menuInfoActionPerformed

    private void menuNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoActionPerformed
        novoArquivo();
    }//GEN-LAST:event_menuNovoActionPerformed

    private void iconSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconSalvarMouseClicked
        salvarArquivo();
    }//GEN-LAST:event_iconSalvarMouseClicked

    private void btnMostrarVAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarVAMouseEntered
        btnMostrarVA.setContentAreaFilled(true);
        btnMostrarVA.setBackground(Color.gray);
    }//GEN-LAST:event_btnMostrarVAMouseEntered

    private void btnMostrarVAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarVAMouseExited
        btnMostrarVA.setContentAreaFilled(false);
    }//GEN-LAST:event_btnMostrarVAMouseExited

    private void btnMostrarVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarVAActionPerformed
//        ImprimeEdge();
//        ImprimeNode();
        imprimeInfo();
    }//GEN-LAST:event_btnMostrarVAActionPerformed

    private void iconAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAbrirMouseClicked
        abrirArquivo();
    }//GEN-LAST:event_iconAbrirMouseClicked

    private void iconNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconNovoMouseClicked
        novoArquivo();
    }//GEN-LAST:event_iconNovoMouseClicked

    private void cbOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOrigemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbOrigemActionPerformed
    public void novoArquivo() {
        frmCriarGrafo fcg = new frmCriarGrafo();
        fcg.setVisible(true);
    }

    public void setNomeGrafo(String nome) {
        display.setText(nome);
        graph.setId(nome);
    }

    public void setAbrirGrafo(List<Node> node, List<Edge> edge, String nome, String tipo) {
        String r = "", r2 = "";
        graph.setNodes(node);
        graph.setEdges(edge);
        graph.setId(nome);
        graph.setEdgedefault(tipo);

        for (int i = 0; i < graph.getNodes().size(); i++) {

            cbOrigem.addItem(graph.getNodes().get(i).getId());
            cbDestino.addItem(graph.getNodes().get(i).getId());

        }
        display.setText("Arquivo carregado com sucesso!!");

    }

    public void centralizarComponente() {
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 4, (ds.height - dw.height) / 4);
    }

    public String adicionarVertice(String n) {
        
        if (txtaddVertice.getText().isEmpty()) {
            
            return "Escolha vertice válido.";
            
        } else {
            
            for (int i = 0; i < graph.getNodes().size(); i++) {
                
                if (graph.getNodes().get(i).getId().equals(n)) {
                    
                    return "Vertice " + graph.getNodes().get(i).getId() + " existente!";
                }
            }

            cbOrigem.addItem(n);
            cbDestino.addItem(n);

            graph.AddNodes(n);
        }
        return "Vértice " + n + " adicionado";
    }

    public void salvarArquivo() {
        display.setForeground(Color.black);
        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);

        if (arquivo.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            display.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = display.getText();
        }

        XStream xstream = new XStream(new DomDriver());
        String xml = null;

        xstream.omitField(Edge.class, "node1");
        xstream.omitField(Edge.class, "node2");
        xstream.alias("graphml", Graphml.class);
        xstream.alias("graph", Graph.class);
        xstream.alias("node", Node.class);
        xstream.alias("edge", Edge.class);
        xstream.useAttributeFor("id", String.class);
        xstream.useAttributeFor("edgedefault", String.class);
        xstream.useAttributeFor("source", String.class);
        xstream.useAttributeFor("target", String.class);
        xstream.useAttributeFor("xmlns", String.class);
        xstream.addImplicitArray(Graph.class, "nodes");
        xstream.addImplicitArray(Graph.class, "edges");
        graphml.setGraph(graph);

        try {
            xml = xstream.toXML(graphml);
            System.out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + xml);
            File file = new File(choose + ".xml");
            PrintWriter print = new PrintWriter(file);
            print.write(xml);
            print.flush();
            print.close();
            display.setText(xml);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void abrirArquivo() {
        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);
        if (arquivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            display.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = display.getText();
            try {
                FileReader leitor = new FileReader(choose);
                XStream xstream = new XStream(new DomDriver());

                xstream.omitField(Edge.class, "node1");
                xstream.omitField(Edge.class, "node2");
                xstream.alias("graphml", Graphml.class);
                xstream.alias("graph", Graph.class);
                xstream.alias("node", Node.class);
                xstream.alias("edge", Edge.class);
                xstream.useAttributeFor("id", String.class);
                xstream.useAttributeFor("edgedefault", String.class);
                xstream.useAttributeFor("source", String.class);
                xstream.useAttributeFor("target", String.class);
                xstream.useAttributeFor("xmlns", String.class);
                xstream.useAttributeFor("id", String.class);
                xstream.addImplicitArray(Graph.class, "nodes");
                xstream.addImplicitArray(Graph.class, "edges");

                graphml = null;
                graphml = (Graphml) xstream.fromXML(leitor);
                ArrayList lst = (ArrayList) graphml.getGraph().getEdges();
                graphml.getGraph().setNodes(new ArrayList<Node>());
                graphml.getGraph().setEdges(new ArrayList<Edge>());

                for (Object e : lst) {
                    if (e instanceof Node) {
                        graphml.getGraph().getNodes().add((Node) e);
                    } else {
                        graphml.getGraph().getEdges().add((Edge) e);
                    }
                }

                for (Edge edge : graphml.getGraph().getEdges()) {
                    for (Node no : graphml.getGraph().getNodes()) {
                        if (no.getId().equals(edge.getSource())) {
                            edge.setNode1(no);
                        }
                        if (no.getId().equals(edge.getTarget())) {
                            edge.setNode2(no);
                        }
                    }
                }
                listaNode = (ArrayList<Node>) graphml.getGraph().getNodes();
                listaEdge = (ArrayList<Edge>) graphml.getGraph().getEdges();

                graph.setNodes(listaNode);
                graph.setEdges(listaEdge);

                String r = "", r2 = "";
                for (int i = 0; i < graph.getNodes().size(); i++) {
                    cbOrigem.addItem(graph.getNodes().get(i).getId());
                    cbDestino.addItem(graph.getNodes().get(i).getId());
                }
                graph.setId(graphml.getGraph().getId());
                imprimeInfo();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void ImprimeNode() {
        String r = " Vertice: {";
        display.setForeground(Color.black);

        for (int i = 0; i < graph.getNodes().size(); i++) {
            r += graph.getNodes().get(i).getId();

            if (i < graph.getNodes().size() - 1) {
                r += ",";
            }
        }
        r += "}";
        display.setText(r);
    }

    public void ImprimeEdge() {
        String r = " Aresta: {";
        display.setForeground(Color.black);
        
            for (int i = 0; i < graph.getEdges().size(); i++) {
                r += "(" + graph.getEdges().get(i).getNode1().getId() + "," + graph.getEdges().get(i).getNode2().getId() + ")";
                if (i < graph.getEdges().size() - 1) {
                    r += ",";
                }
            }
            
        r += "}";
        display.setText(r);
    }

    public void imprimeInfo() {
        String r = "";
        display.setForeground(Color.black);
        
        if (graph.getNodes().size() != 0) {
            r += "Listas:\n";
            r += " Vertice: {";

            for (int i = 0; i < graph.getNodes().size(); i++) {
                r += graph.getNodes().get(i).getId();

                if (i < graph.getNodes().size() - 1) {
                    r += ",";
                }
            }
            r += "}";
        } else {
            r += "\t==========ATENÇÂO==========\n INFORMAÇÂO:\n*****************\n";
            display.setForeground(Color.red);
            r += " Vertice: Lista vazia";
        }
        if (graph.getEdges().size() != 0) {
            r += "\n Aresta: {";

            for (int i = 0; i < graph.getEdges().size(); i++) {
                r += "(" + graph.getEdges().get(i).getNode1().getId() + "," + graph.getEdges().get(i).getNode2().getId() + ")";
                if (i < graph.getEdges().size() - 1) {
                    r += ",";
                }
            }
            r += "}";
        } else {
            display.setForeground(Color.red);
            r += "\n Aresta: Lista vazia";
        }
        display.setText(r);
    }

    public void setNovoGrafo(String nome, String qt, int tipo) {
        String r = "";
        r += "Nome: " + nome + "\n"
                + "Vertices: " + qt + "\n";

        if (tipo == 1) {
            r += "Tipo: Direcionado";
            graph.setEdgedefault("directed");
        } else {
            r += "Tipo: Não direcionado";
            graph.setEdgedefault("undirected");
        }

        display.setText(r);
        graph.setId(nome);
        for (int i = 0; i < Integer.parseInt(qt); i++) {
            Node node = new Node();
            node.setId(Integer.toString(i + 1));
            graph.addNode(node);
            cbOrigem.addItem(Integer.toString(i + 1));
            cbDestino.addItem(Integer.toString(i + 1));
        }
//    alterar(0);

    }

    public Image ImageScale(Image img, int w, int h) {
        BufferedImage image = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(img, 0, 0, w, h, this);
        g2.dispose();
        return image;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarAresta;
    private javax.swing.JButton btnAdicionarVertice;
    private javax.swing.JButton btnMostrarVA;
    private javax.swing.JComboBox<String> cbDestino;
    private javax.swing.JComboBox<String> cbOrigem;
    private javax.swing.JTextArea display;
    private javax.swing.JLabel iconAbrir;
    private javax.swing.JLabel iconNovo;
    private javax.swing.JLabel iconSalvar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenu menuExibir;
    private javax.swing.JMenuItem menuInfo;
    private javax.swing.JMenuItem menuNovo;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JTextField txtaddVertice;
    // End of variables declaration//GEN-END:variables
}
